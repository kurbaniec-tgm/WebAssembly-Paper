{"version":3,"file":"worker.js","sources":["../../output/worker-thread/nodes.js","../../output/worker-thread/strings.js","../../output/worker-thread/MutationTransfer.js","../../output/worker-thread/MutationObserver.js","../../output/worker-thread/dom/ParentNode.js","../../output/worker-thread/dom/DOMTokenList.js","../../output/worker-thread/dom/Element.js","../../output/worker-thread/serializeTransferrableObject.js","../../output/worker-thread/canvas/canvas-utils.js","../../output/worker-thread/Storage.js","../../output/worker-thread/dom/matchElements.js","../../output/worker-thread/dom/Node.js","../../output/worker-thread/phase.js","../../output/worker-thread/dom/Attr.js","../../output/utils.js","../../output/worker-thread/css/CSSStyleDeclaration.js","../../output/worker-thread/dom/enhanceElement.js","../../output/third_party/html-parser/html-parser.js","../../output/transfer/TransferrableNodes.js","../../output/worker-thread/dom/HTMLElement.js","../../output/worker-thread/dom/SVGElement.js","../../output/worker-thread/dom/HTMLAnchorElement.js","../../output/worker-thread/dom/HTMLButtonElement.js","../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../output/worker-thread/canvas/CanvasGradient.js","../../output/worker-thread/canvas/CanvasPattern.js","../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../output/worker-thread/dom/HTMLCanvasElement.js","../../output/worker-thread/dom/HTMLDataElement.js","../../output/worker-thread/dom/HTMLEmbedElement.js","../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../output/worker-thread/dom/HTMLFieldSetElement.js","../../output/worker-thread/dom/HTMLFormElement.js","../../output/worker-thread/dom/HTMLIFrameElement.js","../../output/worker-thread/dom/HTMLImageElement.js","../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../output/worker-thread/dom/HTMLInputElement.js","../../output/worker-thread/dom/HTMLLabelElement.js","../../output/worker-thread/dom/HTMLLinkElement.js","../../output/worker-thread/dom/HTMLMapElement.js","../../output/worker-thread/dom/HTMLMeterElement.js","../../output/worker-thread/dom/HTMLModElement.js","../../output/worker-thread/dom/HTMLOListElement.js","../../output/worker-thread/dom/HTMLOptionElement.js","../../output/worker-thread/dom/HTMLProgressElement.js","../../output/worker-thread/dom/HTMLQuoteElement.js","../../output/worker-thread/dom/HTMLScriptElement.js","../../output/worker-thread/dom/HTMLSelectElement.js","../../output/worker-thread/dom/HTMLSourceElement.js","../../output/worker-thread/dom/HTMLStyleElement.js","../../output/worker-thread/dom/HTMLTableCellElement.js","../../output/worker-thread/dom/HTMLTableColElement.js","../../output/worker-thread/dom/HTMLTableElement.js","../../output/worker-thread/dom/HTMLTableRowElement.js","../../output/worker-thread/dom/HTMLTableSectionElement.js","../../output/worker-thread/dom/HTMLTimeElement.js","../../output/worker-thread/dom/HTMLDataListElement.js","../../output/worker-thread/dom/Document.js","../../output/worker-thread/dom/CharacterData.js","../../output/worker-thread/dom/Text.js","../../output/worker-thread/dom/Comment.js","../../output/worker-thread/dom/DocumentFragment.js","../../output/worker-thread/Event.js","../../output/worker-thread/SyncValuePropagation.js","../../output/worker-thread/ResizePropagation.js","../../output/worker-thread/index.js","../../output/worker-thread/initialize.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then(_ => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* index */] === target[7 /* index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach(observer => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach(observer => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    constructor(callback) {\n        this[_a] = [];\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* records */].push(record);\n    }\n}\n_a = 42 /* records */;\n//# sourceMappingURL=MutationObserver.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = element => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? element => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : element => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? element => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : element => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? element => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : element => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* scopingRoot */], matcher).filter(element => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[_a] = [];\n        this[13 /* target */] = target;\n        this[18 /* attributeName */] = attributeName;\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].concat(tokens)));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].filter(token => !tokens.includes(token))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...set);\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (!this[43 /* tokens */].includes(token)) {\n            if (force !== false) {\n                // Note, this will add the token if force is undefined (not passed into the method), or true.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (force !== true) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or false.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [(_a = 43 /* tokens */, 13 /* target */, 18 /* attributeName */, 44 /* storeAttribute */, 67 /* mutated */)](oldValue, value) {\n        this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, this[18 /* attributeName */], value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: this[18 /* attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString(this[18 /* attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* propertyBackedAttributes */]);\n    defineOn[46 /* propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.attributes = [];\n        this.style = new CSSStyleDeclaration(this);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* creationFormat */] = [\n            this[7 /* index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // NonDocummentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map(child => {\n                switch (child.nodeType) {\n                    case 3 /* TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach(n => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map(node => node[7 /* index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[7 /* index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [(_a = 46 /* propertyBackedAttributes */, 44 /* storeAttribute */)](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* ATTRIBUTES */,\n                this[7 /* index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0,\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, element => inputClassList.some(inputClassName => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? _ => true\n            : element => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach(attr => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise(resolve => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 6 /* GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* target */][0] === this[7 /* index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* GET_BOUNDING_CLIENT_RECT */, this[7 /* index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nElement[_a] = {\n    class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n    style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n};\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise(resolve => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* type */] === 10 /* IMAGE_BITMAP_INSTANCE */ && data[73 /* callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* IMAGE_BITMAP_INSTANCE */, image[7 /* index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get: function () {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value: function (n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value: function (key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value: function (key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* STORAGE */, 2 /* SET */, location, store(key), store(stringValue)]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value: function (key) {\n            delete this[key];\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                store(key),\n                0,\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value: function () {\n            Object.keys(this).forEach(key => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                0,\n                0,\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every(t => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach(child => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some(child => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    let endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach(child => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.childNodes = [];\n        this.parentNode = null;\n        this.isConnected = false;\n        this[_a] = {};\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* scopingRoot */] = this;\n        this[7 /* index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* transferredFormat */] = [this[7 /* index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach(childNode => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some(child => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                referenceNode[7 /* index */],\n                0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [(45 /* scopingRoot */, 7 /* index */, 9 /* transferredFormat */, 8 /* creationFormat */, _a = 10 /* handlers */, 56 /* insertedNode */)](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* scopingRoot */, this[45 /* scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                0,\n                previousSibling ? previousSibling[7 /* index */] : 0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [2 /* CHILD_LIST */, this[7 /* index */], 0, 0, 0, 1, child[7 /* index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* removedNode */](oldChild);\n        this[56 /* insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* index */],\n            oldChild[7 /* index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        this.parentNode && this.parentNode.removeChild(this);\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [4 /* EVENT_SUBSCRIPTION */, this[7 /* index */], 0, 1, storedType, index]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* EVENT_SUBSCRIPTION */,\n                this[7 /* index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* handlers */] && target[10 /* handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => attr => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter(key => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    constructor(target) {\n        this[_a] = {};\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n        this[13 /* target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (let key in this[3 /* properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, 'style', value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n_a = 3 /* properties */, 44 /* storeAttribute */, 13 /* target */;\n//# sourceMappingURL=CSSStyleDeclaration.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach(pair => {\n        for (let property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        let beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(text));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = tagName.toUpperCase();\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (currentParent.nodeName.toUpperCase() == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n//# sourceMappingURL=html-parser.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter(key => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                this.addEventListener(normalizedKey, value);\n                this[76 /* propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    constructor() {\n        super(...arguments);\n        this[_a] = {};\n    }\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [(_a = 76 /* propertyEventHandlers */, 68 /* serializeAsTransferrableObject */)]() {\n        return [7 /* HTMLElement */, this[7 /* index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    { draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']] },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    { spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']] },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    constructor() {\n        this[_a] = {};\n        this[_b] = false;\n    }\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [(_a = 70 /* patternImplementation */, _b = 71 /* patternUpgraded */, 72 /* patternUpgradePromise */, 69 /* retrieveCanvasPattern */)](canvas, image, repetition) {\n        this[72 /* patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* patternImplementation */] = pattern;\n            this[71 /* patternUpgraded */] = true;\n        });\n        return this[72 /* patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    constructor(canvas) {\n        this.objectIndex = 0;\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [6 /* CanvasRenderingContext2D */, this.canvasElement[7 /* index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* mutated */]('strokeRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    constructor(canvas) {\n        this.queue = [];\n        this.upgraded = false;\n        // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n        // happen subsequently, we must keep track of these to avoid reentrancy problems.\n        this.unresolvedCalls = 0;\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise(resolve => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 9 /* OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* target */][0] === canvas[7 /* index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args: args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'strokeStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, element => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n        // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n        // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n        // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n        //     and forwarding interaction events to flag \"dirtiness\".\n        // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n        this[_a] = '';\n        this[_b] = false;\n    }\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this[21 /* value */]);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this[21 /* value */].length === 0) {\n            return NaN;\n        }\n        return Number(this[21 /* value */]);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\n_a = 21 /* value */, _b = 47 /* checked */;\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, element => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this[_a] = false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('selected'),\n            1 /* TRUE */,\n            this[52 /* selected */] ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\n_a = 52 /* selected */;\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this[_a] = true;\n        this[_b] = 0;\n    }\n    get position() {\n        return this[48 /* indeterminate */] ? -1 : this[21 /* value */] / this.max;\n    }\n    get value() {\n        return this[21 /* value */];\n    }\n    set value(value) {\n        this[48 /* indeterminate */] = false;\n        this[21 /* value */] = value;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\n_a = 48 /* indeterminate */, _b = 21 /* value */;\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this[_a] = -1 /* UNMODIFIED */;\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [(_a = 49 /* size */, 56 /* insertedNode */)](child) {\n        super[56 /* insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && (isOptionPredicate(child) && child.selected)) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        super[57 /* removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* size */] === -1 /* UNMODIFIED */\n            ? this.multiple\n                ? 4 /* MULTIPLE */\n                : 1 /* SINGLE */\n            : this[49 /* size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* size */] = size > 0 ? size : this.multiple ? 4 /* MULTIPLE */ : 1 /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* MULTIPLE */ : \"select-multiple\" /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every(t => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        cell && cell.remove();\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\n/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    constructor(global) {\n        super(9 /* DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        this[_a] = true;\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [(_a = 58 /* allowTransfer */, 59 /* observe */)]() {\n        setPhase(1 /* Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* nodeType */]) {\n            case 3 /* TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            case 8 /* COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* index */]);\n                (skeleton[2 /* attributes */] || []).forEach(attribute => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* childNodes */] || []).forEach(child => node.appendChild(this[64 /* hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, element => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* data */] = data;\n        this[8 /* creationFormat */] = [this[7 /* index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* CHARACTER_DATA */, this[7 /* index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n}\n38 /* data */;\n//# sourceMappingURL=CharacterData.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* creationFormat */] = [this[7 /* index */], 11 /* DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach(child => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a, _b;\nimport { get } from './nodes';\nexport class Event {\n    constructor(type, opts) {\n        this[_a] = false;\n        this[_b] = false;\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* end */] = this[50 /* stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n_a = 50 /* stop */, _b = 51 /* end */;\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* target */] !== null) {\n        const index = event[13 /* target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach(touchListKey => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 1 /* EVENT */) {\n            return;\n        }\n        const event = data[39 /* event */];\n        const node = get(event[7 /* index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* type */], { bubbles: event[25 /* bubbles */], cancelable: event[26 /* cancelable */] }), {\n                cancelBubble: event[27 /* cancelBubble */],\n                defaultPrevented: event[29 /* defaultPrevented */],\n                eventPhase: event[30 /* eventPhase */],\n                isTrusted: event[31 /* isTrusted */],\n                returnValue: event[32 /* returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* timeStamp */],\n                scoped: event[34 /* scoped */],\n                keyCode: event[35 /* keyCode */],\n                pageX: event[60 /* pageX */],\n                pageY: event[61 /* pageY */],\n                offsetX: event[65 /* offsetX */],\n                offsetY: event[66 /* offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 4 /* SYNC */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        const node = get(sync[7 /* index */]);\n        if (node) {\n            node.ownerDocument[58 /* allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* value */];\n            node.ownerDocument[58 /* allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 5 /* RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HTMLElement } from './dom/HTMLElement';\nimport { SVGElement } from './dom/SVGElement';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { Document } from './dom/Document';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { Text } from './dom/Text';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { Element } from './dom/Element';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    DOMTokenList,\n    Document,\n    DocumentFragment,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\nexport const hydrate = initialize;\n//# sourceMappingURL=index.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { createStorage } from './Storage';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageData, sessionStorageData) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* childNodes */] || []).forEach(child => document.body.appendChild(document[64 /* hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    window.localStorage = createStorage(document, 0 /* Local */, localStorageData);\n    window.sessionStorage = createStorage(document, 1 /* Session */, sessionStorageData);\n}\n//# sourceMappingURL=initialize.js.map"],"names":["get","index","mapping","store$1","value","count","transfer$2","document","mutation","phase","pending","pendingMutations","Promise","_","buffer","Uint16Array","consume","copy","transfer","consumeNodes","acc","node","mutations","nodes","consume$1","strings","consumeStrings","newPhase","mutate","record","transferable","observer","t","observerTarget","pushMutation","_querySelectorAll","selector","selectorBracketIndexes","selectorHasAttr","elementSelector","attrSelector","matcher","element","matchAttrReference","matchChildrenElements","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","enumerable","configurable","set","definePropertyBackedAttributes","attributes","sub","serializeTransferrableObject","args","serialized","i","arg","num","f32","u16","store","Array","serializedArray","_typeof","serializedObject","retrieveImageBitmap","image","canvas","callIndex","indexTracker","resolve","messageHandler","data","createStorage","location","storage","define","this","n","keys","key","stringValue","String","_this","_a","ElementKind","tagNameConditionPredicate","tagNames","elementPredicate","conditionPredicate","matchingElements","child","matchChildElement","returnValue","grandChildMatch","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawAttrValue","casedValue","rawValue","casedAttrValue","Map","observers","MutationObserver","callback","target","options","records","propagate","property","Node","nodeType","nodeName","ownerDocument","overrideIndex","storeOverrideNodeMapping","Math","undefined","storeNodeMapping","textContent","childNodes","childNode","otherNode","referenceNode","addedNodes","nextSibling","type","_a$1","previousSibling","removedNodes","newChild","oldChild","handler","storedType","storeString","lowerType","handlers","event","iterator","parentChildNodes","ParentNode","matches","querySelectorAll","children","DOMTokenList","attributeName","token","oldValue","tokens","Set","newToken","force","collection","newValue","toString","attr","matchPredicate","namespaceURI","name","CSSStyleDeclaration","length","values","reflectProperties","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","Number","castableValue","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","NS_NAME_TO_CLASS","registerSubclass","localName","subclass","HTML_NAMESPACE","VOID_ELEMENTS","Element","valueAsString","propertyBacked","matchAttrPredicate","attributeNamespace","names","inputClassList","inputClassName","tagName","lowerTagName","deep","clone","left","top","right","bottom","x","y","width","height","_this2","transferredBoundingClientRect","setTimeout","tag","start","attrsToString","contents","html","parse","rootElement","match","currentParent","root","currentNamespace","stack","lastTextPos","tagsClosed","SVG_NAMESPACE","commentContents","beginningSlash","matchAttributes","endSlash","text","normalizedTagName","attMatch","childToAppend","closeMarkup","wrapper","class","el","style","id","HTMLElement","arguments","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","SVGElement","HTMLAnchorElement","rel","href","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","_b","Float32Array","CanvasGradient","offset","color","CanvasPattern","OffscreenCanvasPolyfill","contextType","OffscreenCanvasRenderingContext2DPolyfill","fnName","objectId","creationMethod","creationArgs","w","h","maxWidth","angle","a","b","c","d","e","f","radius","startAngle","endAngle","anticlockwise","x1","y1","x2","y2","radiusX","radiusY","rotation","cp1x","cp1y","cp2x","cp2y","cpx","cpy","lineDash","pathOrFillRule","fillRule","transformOrA","bOrC","cOrD","dOrE","eOrF","x0","y0","gradientId","r0","r1","repetition","patternId","dx","dy","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","WeakMap","CanvasRenderingContext2DShim","OffscreenCanvas","getContext","deferred","isTestMode","upgradePromise","then","call","isSetter","segments","ImageBitmap","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","_this4","_this5","HTMLCanvasElement","HTMLDataElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","HTMLInputElement","date","m","str","components","Date","parseInt","isNaN","TypeError","NaN","accept","defaultChecked","dirName","formEncType","max","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","htmlFor","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","parent","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","HTMLTableRowElement","cell","cells","td","HTMLTableSectionElement","rows","tr","HTMLTimeElement","dateTime","HTMLDataListElement","CharacterData","Text","remainderTextNode","parentNode","insertBeforePosition","Comment","DocumentFragment","Event","opts","bubbles","cancelable","targetFromTransfer","touchListFromTransfer","touchListKeys","list","item","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","pageX","pageY","Document","global","DOCUMENT_NAME","addEventListener","removeEventListener","propagate$1","cancelBubble","defaultPrevented","eventPhase","isTrusted","timeStamp","scoped","keyCode","offsetX","offsetY","touches","changedTouches","propagate$2","sync","propagate$3","skeleton","attribute","globalScope","innerWidth","innerHeight","WorkerDOMEvent","noop","workerDOM","postMessage","self","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageData","sessionStorageData","appendKeys","keysToAppend","previousPrototypeLength","writable","hyphenatedKey","appendGlobalEventProperties","normalizedKey","stored"],"mappings":"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"}